{
  "hash": "cf244d86800f0292a87e273258ced0ad",
  "result": {
    "markdown": "---\ntitle: \"Visualizing NFL Game Attendance (Part 1)\"\nauthor: \"Parker Barnes\"\ndate: \"2023-09-25\"\nexecute: \n  warning: false\n  error: false\nformat: \n  html:\n    toc: true\n    code-fold: show\n---\n\n\n[![Photo by Anders Krøgh Jørgensen on Unsplash](nfl.jpg){fig-align=\"center\"}](https://unsplash.com/@anders_kj1?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)\n\nIn part 1 of this 2-part blog post we will be visualizing potential factors that drive NFL game attendance. The data come from a [#TidyTuesday data set](https://github.com/rfordatascience/tidytuesday/blob/master/data/2020/2020-02-04/readme.md) from 2020 which consists of game attendance data between the years 2000 and 2019. I also managed to track down [another data set](https://www.kaggle.com/datasets/tobycrabtree/nfl-scores-and-betting-data?select=spreadspoke_scores.csv) from Kaggle that includes useful data about stadiums and weather.\n\n## Data Import\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) # loads all our favorite data analysis packages\ntheme_set(theme_bw()) # make all our plots look a little nicer\n```\n:::\n\n\nFirst, we will import the data. For simplicity, we will only be looking at regular season games.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nattendance <-\n  read_csv(\n    \"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-04/attendance.csv\",\n    col_select = c(team, team_name, year, week, weekly_attendance)\n  ) |>\n  drop_na(weekly_attendance) # remove bye weeks\n\nattendance |> glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 10,208\nColumns: 5\n$ team              <chr> \"Arizona\", \"Arizona\", \"Arizona\", \"Arizona\", \"Arizona…\n$ team_name         <chr> \"Cardinals\", \"Cardinals\", \"Cardinals\", \"Cardinals\", …\n$ year              <dbl> 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000…\n$ week              <dbl> 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, …\n$ weekly_attendance <dbl> 77434, 66009, 71801, 66985, 44296, 38293, 62981, 352…\n```\n:::\n\n```{.r .cell-code}\nconferences <-\n  read_csv(\n    \"nfl_teams.csv\",\n    col_select = c(team_name, conference = team_conference)\n  )\n\ngames <-\n  read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-04/games.csv\") |>\n  # fixing error in the data\n  rows_update(\n    tibble(\n      year = 2005,\n      week = \"2\",\n      winner = \"New York Giants\",\n      home_team = \"New York Giants\",\n      away_team = \"New Orleans Saints\"\n    ),\n    by = c(\"year\", \"week\", \"winner\")\n  )\n\ngame_details <-\n  read_csv(\n    \"spreadspoke_scores.csv\",\n    col_select = c(\n      week = schedule_week, year = schedule_season,\n      home_team = team_home, away_team = team_away, stadium,\n      weather_temperature # select the few columns I need\n    )\n  )\n\ngames <-\n  games |>\n  left_join(game_details) |>\n  mutate(week = as.numeric(week)) |> # non-regular weeks are not numeric and get converted to NA\n  drop_na(week) # drop non-regular games\n\ngames |> glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 5,104\nColumns: 21\n$ year                <dbl> 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 20…\n$ week                <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2,…\n$ home_team           <chr> \"Minnesota Vikings\", \"Kansas City Chiefs\", \"Washin…\n$ away_team           <chr> \"Chicago Bears\", \"Indianapolis Colts\", \"Carolina P…\n$ winner              <chr> \"Minnesota Vikings\", \"Indianapolis Colts\", \"Washin…\n$ tie                 <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ day                 <chr> \"Sun\", \"Sun\", \"Sun\", \"Sun\", \"Sun\", \"Sun\", \"Sun\", \"…\n$ date                <chr> \"September 3\", \"September 3\", \"September 3\", \"Sept…\n$ time                <time> 13:00:00, 13:00:00, 13:01:00, 13:02:00, 13:02:00,…\n$ pts_win             <dbl> 30, 27, 20, 36, 16, 27, 21, 14, 21, 41, 9, 23, 20,…\n$ pts_loss            <dbl> 27, 14, 17, 28, 0, 7, 16, 10, 16, 14, 6, 0, 16, 13…\n$ yds_win             <dbl> 374, 386, 396, 359, 336, 398, 296, 187, 395, 425, …\n$ turnovers_win       <dbl> 1, 2, 0, 1, 0, 0, 1, 2, 2, 3, 0, 1, 1, 0, 3, 4, 1,…\n$ yds_loss            <dbl> 425, 280, 236, 339, 223, 249, 278, 252, 355, 167, …\n$ turnovers_loss      <dbl> 1, 1, 1, 1, 1, 1, 1, 3, 4, 2, 4, 6, 2, 1, 0, 1, 3,…\n$ home_team_name      <chr> \"Vikings\", \"Chiefs\", \"Redskins\", \"Falcons\", \"Steel…\n$ home_team_city      <chr> \"Minnesota\", \"Kansas City\", \"Washington\", \"Atlanta…\n$ away_team_name      <chr> \"Bears\", \"Colts\", \"Panthers\", \"49ers\", \"Ravens\", \"…\n$ away_team_city      <chr> \"Chicago\", \"Indianapolis\", \"Carolina\", \"San Franci…\n$ stadium             <chr> \"Hubert H. Humphrey Metrodome\", \"Arrowhead Stadium…\n$ weather_temperature <dbl> 72, 86, 76, 72, 73, 75, 63, 72, 78, 95, 60, 84, 69…\n```\n:::\n\n```{.r .cell-code}\nstadiums <-\n  read_csv(\n     \"nfl_stadiums.csv\",\n    col_select = c(\n     stadium = stadium_name, stadium_capacity, stadium_latitude,\n     stadium_longitude, stadium_address, stadium_open, stadium_type\n    )\n  ) |>\n  mutate(\n    stadium_id = cur_group_id(), # Some stadiums were renamed at various points. We want to group those together\n    .by = c(stadium_address, stadium_open),\n    .before = 1\n  ) |>\n  select(-stadium_address, stadium_open)\n\nstadiums |> glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 120\nColumns: 7\n$ stadium_id        <int> 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15…\n$ stadium           <chr> \"Acrisure Stadium\", \"Alamo Dome\", \"Allegiant Stadium…\n$ stadium_capacity  <dbl> 65500, 72000, 65000, 75024, NA, NA, NA, 76416, 80000…\n$ stadium_latitude  <dbl> 40.48460, 29.41694, 36.09075, NA, 30.32389, NA, NA, …\n$ stadium_longitude <dbl> -80.21440, -98.47889, -115.18372, NA, -81.63750, NA,…\n$ stadium_open      <dbl> 2001, NA, 2020, NA, NA, NA, 1980, 1972, 2009, 1966, …\n$ stadium_type      <chr> \"outdoor\", \"indoor\", \"indoor\", \"outdoor\", NA, \"outdo…\n```\n:::\n:::\n\n\nThese tibbles contain fairly basic info about each game. including who was playing, who won, which stadium the game was at, and most importantly, the game attendance. For this analysis, game statistics such as points scored are largely irrelevant since game attendance is determined at the beginning of game. That being said, **past** performance might be indicative of future attendance which we will explore later.\n\n## Data Transformation\n\nSince the `attendance` tibble doesn't contain information about which team is home or away, we'll need to join it with the `games` tibble based on `team`, `year`, and `week`. This appears trivial at first, but actually requires us to pivot the `games` tibble in order to create a single column for team name that we can join with `attendance`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# select variables of interest from attendance\nattendance_simple <-\n  attendance |>\n  mutate(team_name = paste(team, team_name)) |>\n  select(week, year, team_name, weekly_attendance)\n\n# determine loser and select variables of interest\ngames_long <-\n  games |>\n  mutate(\n    loser = if_else(winner == home_team, away_team, home_team)\n  ) |>\n  pivot_longer(c(home_team, away_team), names_to = \"home_away\", values_to = \"team_name\") |>\n  select(team_name, home_away, winner, loser, week, year)\n\n\n\nattendance_joined <-\n  attendance_simple |>\n  inner_join(games_long) |>\n  inner_join(conferences) |>\n  arrange(team_name, year, week)\n\nattendance_joined |>\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 10,208\nColumns: 8\n$ week              <dbl> 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, …\n$ year              <dbl> 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000…\n$ team_name         <chr> \"Arizona Cardinals\", \"Arizona Cardinals\", \"Arizona C…\n$ weekly_attendance <dbl> 77434, 66009, 71801, 66985, 44296, 38293, 62981, 352…\n$ home_away         <chr> \"away_team\", \"home_team\", \"home_team\", \"away_team\", …\n$ winner            <chr> \"New York Giants\", \"Arizona Cardinals\", \"Green Bay P…\n$ loser             <chr> \"Arizona Cardinals\", \"Dallas Cowboys\", \"Arizona Card…\n$ conference        <chr> \"NFC\", \"NFC\", \"NFC\", \"NFC\", \"NFC\", \"NFC\", \"NFC\", \"NF…\n```\n:::\n:::\n\n\nNow that we've joined attendance and games together, we need to pivot back to \"wide\" format to achieve \"tidyness\". Before we do that, let's calculate win streak and lose streaks for each team at the time of the match up. To do this we will use the `rle` function, which calculates **r**un **l**ength **e**ncodings of equal values in a vector. This solution admittedly feels kinda hacky since it's not a traditional `tidyverse` function, but it's the best way I could find. Please let me know if you know of a better way!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstreaks <-\n  attendance_joined |>\n  group_by(\n    team_name,\n    winner_grp = with(rle(winner), rep(seq_along(lengths), lengths))\n  ) |>\n  mutate(\n    win_streak = seq_along(winner_grp) - 1,\n  ) |>\n  group_by(\n    team_name,\n    loser_grp = with(rle(loser), rep(seq_along(lengths), lengths))\n  ) |>\n  mutate(\n    lose_streak = seq_along(loser_grp) - 1\n  ) |>\n  ungroup() |>\n  select(-winner_grp, -loser_grp) |>\n  pivot_wider(\n    names_from = home_away,\n    values_from = c(team_name, win_streak, lose_streak, conference)\n  ) |>\n  rename(\n    away_team = team_name_away_team,\n    home_team = team_name_home_team\n  )\n```\n:::\n\n\nTo finish off our tidy data set, we will join in the stadium and temperature data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnfl_tidy <-\n  streaks |>\n  left_join(\n    games |>\n      select(week, year, home_team, away_team, stadium, weather_temperature)\n  ) |>\n  left_join(stadiums) |>\n  # rename all stadiums to what they are currently named\n  mutate(stadium = stadium[which.max(year)], .by = stadium_id)\n\nnfl_tidy |> glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 5,104\nColumns: 21\n$ week                  <dbl> 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, …\n$ year                  <dbl> 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, …\n$ weekly_attendance     <dbl> 77434, 66009, 71801, 66985, 44296, 38293, 62981,…\n$ winner                <chr> \"New York Giants\", \"Arizona Cardinals\", \"Green B…\n$ loser                 <chr> \"Arizona Cardinals\", \"Dallas Cowboys\", \"Arizona …\n$ away_team             <chr> \"Arizona Cardinals\", \"Dallas Cowboys\", \"Green Ba…\n$ home_team             <chr> \"New York Giants\", \"Arizona Cardinals\", \"Arizona…\n$ win_streak_away_team  <dbl> 0, 0, 1, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 5, 0, …\n$ win_streak_home_team  <dbl> 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0, …\n$ lose_streak_away_team <dbl> 0, 1, 0, 1, 2, 0, 1, 0, 1, 0, 1, 0, 3, 4, 0, 6, …\n$ lose_streak_home_team <dbl> 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 5, 0, …\n$ conference_away_team  <chr> \"NFC\", \"NFC\", \"NFC\", \"NFC\", \"AFC\", \"NFC\", \"NFC\",…\n$ conference_home_team  <chr> \"NFC\", \"NFC\", \"NFC\", \"NFC\", \"NFC\", \"NFC\", \"NFC\",…\n$ stadium               <chr> \"Giants Stadium\", \"University of Phoenix Stadium…\n$ weather_temperature   <dbl> 78, 92, 80, 65, 85, 71, 68, 62, 59, 72, 38, 57, …\n$ stadium_id            <int> 31, 73, 73, 15, 73, 73, 77, 73, 73, 37, 85, 73, …\n$ stadium_capacity      <dbl> NA, 63400, 63400, NA, 63400, 63400, NA, 63400, 6…\n$ stadium_latitude      <dbl> 40.81222, 33.45520, 33.45520, 37.71361, 33.45520…\n$ stadium_longitude     <dbl> -74.07694, -111.93160, -111.93160, -122.38611, -…\n$ stadium_open          <dbl> 1976, 2006, 2006, 1960, 2006, 2006, 1971, 2006, …\n$ stadium_type          <chr> \"outdoor\", \"retractable\", \"retractable\", \"outdoo…\n```\n:::\n:::\n\n\n## Visualization\n\n### Attendance Overview\n\nLet's first get an idea of how game attendance looks overall\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnfl_tidy |>\n  ggplot(aes(weekly_attendance)) +\n  geom_histogram() +\n  scale_x_continuous(labels = scales::label_comma(), n.breaks = 10) +\n  labs(\n    x = \"Attendance\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nAttendance looks fairly normally distributed, averaging around 70,000 people\n\nLet's look at attendance by year and by week\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnfl_tidy |>\n  ggplot(aes(x = weekly_attendance, y = fct_rev(factor(year)))) +\n  geom_boxplot() +\n  scale_x_continuous(labels = scales::label_comma(), n.breaks = 10) +\n  labs(\n    x = \"Attendance\",\n    y = NULL\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nAttendance over the last 20 years is fairly stable, with perhaps a gradual increase over time.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnfl_tidy |>\n  ggplot(aes(x = weekly_attendance, y = fct_rev(factor(week)))) +\n  geom_boxplot() +\n  scale_x_continuous(labels = scales::label_comma(), n.breaks = 10) +\n  labs(\n    x = \"Attendance\",\n    y = \"Week\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nAttendance across the season looks very stable as well.\n\n### Home Team\n\nLet's explore what is probably the biggest factor in game attendance: Home Team\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create function since we will make this plot a few times\nattendance_boxplots <- function(data, x, y, fill, n.breaks = 9, labels = scales::label_comma()) {\n  data |>\n    ggplot(aes({{ x }}, {{ y }}, fill = {{ fill }})) +\n    geom_boxplot() +\n    scale_x_continuous(labels = labels, n.breaks = n.breaks) +\n    expand_limits(x = 0) +\n    labs(\n      y = NULL,\n      x = \"Attendance\",\n      fill = \"Conference\"\n    ) +\n    theme(legend.position = \"bottom\")\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnfl_tidy |>\n  mutate(\n    med_attendance = median(weekly_attendance),\n    .by = home_team\n  ) |>\n  mutate(home_team = fct_reorder(word(home_team, -1), med_attendance)) |> # reorder by median attendance\n  attendance_boxplots(weekly_attendance, home_team, conference_home_team) +\n  ylab(\"Home Team\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=576}\n:::\n:::\n\n\nThis gives us view into team popularity, but we also need to take into account a glaring confounding variable - stadium capacity.\n\n### Stadium Capacity\n\nLet's now visualize attendance as a percent of stadium capacity.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnfl_tidy |>\n  mutate(\n    prop_capacity = weekly_attendance / stadium_capacity\n  ) |>\n  mutate(\n    med_prop_capacity = median(prop_capacity, na.rm = T),\n    .by = home_team\n  ) |>\n  mutate(home_team = fct_reorder(word(home_team, -1), med_prop_capacity)) |> # reorder by median attendance\n  attendance_boxplots(prop_capacity, home_team, conference_home_team, labels = scales::label_percent()) +\n  ylab(\"Home Team\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=576}\n:::\n:::\n\n\nA few things we learn from this chart:\n\n1.  Stadiums regularly fill to above capacity\n\n2.  While the cowboys still dominate in this regard, unexpected teams such as the Raiders jumped from dead last in terms of nominal attendance to near the top in percent capacity filled. This confirms our suspicion that stadium size plays a part in game attendance.\n\n### Away Team\n\nOne last related variable we will explore that will reveal some insight is how the away team affects attendance. This stat is not biased by stadium size since away teams play across many stadiums, and may reveal patterns about how widespread a team's fans are across the country.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnfl_tidy |>\n  mutate(\n    med_attendance = median(weekly_attendance),\n    .by = away_team\n  ) |>\n  mutate(away_team = fct_reorder(word(away_team, -1), med_attendance)) |> # reorder by median attendance\n\n  attendance_boxplots(weekly_attendance, away_team, conference_away_team) +\n  ylab(\"Away Team\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=576}\n:::\n:::\n\n\nNot unsurprisingly, away teams do not have as much of an affect on attendance as home teams. Nonetheless, It makes sense that the Patriots are a team that many people across the country enjoy seeing their home team play, regardless of whether they love or hate them.\n\n<!-- Let's quickly visualize how the teams faired on the previous 3 visualizations: -->\n\n\n\n\n\n### Distance Between Teams\n\nLet's focus more on a logistical variable: Distance between teams. We might hypothesize that teams further away from each other have smaller attendances.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create tibble of team location coordinates\nteam_locations <-\n  nfl_tidy |>\n  # add in number of times played at each stadium per season\n  add_count(home_team, year, stadium) |>\n  # replace stadium with stadium they played at the most that year\n  mutate(stadium = stadium[which.max(n)], .by = c(home_team, year)) |>\n  distinct(year, team = home_team, stadium) |>\n  left_join(\n    stadiums |>\n      select(stadium, stadium_latitude, stadium_longitude)\n  )\n\n# join in team locations twice - once for home team and once for away team\nnfl_tidy_with_distances <-\n  nfl_tidy |>\n  left_join(\n    team_locations |>\n      select(home_team = team, year, home_team_latitude = stadium_latitude, home_team_longitude = stadium_longitude)\n  ) |>\n  left_join(\n    team_locations |>\n      select(away_team = team, year, away_team_latitude = stadium_latitude, away_team_longitude = stadium_longitude)\n  ) |>\n  rowwise() |>\n  # use haversine formula to calculate distance and convert to miles\n  mutate(distance_between_teams = geosphere::distHaversine(c(home_team_longitude, home_team_latitude), c(away_team_longitude, away_team_latitude)) / 1609)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnfl_tidy_with_distances |>\n  mutate(same_conference = conference_home_team == conference_away_team) |>\n  ggplot(aes(distance_between_teams, weekly_attendance)) +\n  geom_point(aes(color = same_conference), alpha = .8) +\n  geom_smooth() +\n  expand_limits(x = 0, y = 0) +\n  scale_y_continuous(labels = scales::label_comma(), n.breaks = 10) +\n  scale_x_continuous(labels = scales::label_comma(), n.breaks = 10) +\n  labs(\n    x = \"Distance between Teams (mi)\",\n    y = \"Attendance\",\n    color = \"Same Conference\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\nAt a glance, there doesn't appear to be a strong association between distance between teams and attendance, but we won't write it off since there are so many confounding variables that are baked into the data.\n\n### Temperature\n\nHow sensitive are fans are about outside temperature? Let's visualize it against temperature and make sure to include the stadium type.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnfl_tidy |> \n  drop_na(stadium_type) |> \n  ggplot(aes(weather_temperature, weekly_attendance)) + \n  geom_point(aes(color = stadium_type), alpha = .7, show.legend = F) +\n  geom_smooth() +\n  expand_limits(x = 0, y = 0) +\n  scale_y_continuous(labels = scales::label_comma(), n.breaks = 10) +\n  facet_wrap(~stadium_type, labeller = \"label_both\") +\n  labs(\n    x = \"Temperature (F)\",\n    y = \"Attendance\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\nA few things we learn from this chart:\n\n1.  I mistakenly believed the temperature data always recorded outside the stadiums\n2.  There is weak evidence that hotter temperatures lead to lower attendance.\n\n### Winning/Losing Streaks\n\nThe last association we'll look at is how past team performance affects attendance. It seems likely that if a home team is on a long winning streak, their fans might be more enthusiastic about attending games. The reverse might also be true about losing streaks, so we will visualize that too.\n\nIn order to accomplish this, we will combine winning and losing streaks into a single variable where positive values indicate a winning streak and negative values indicate a losing streak.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnfl_tidy |>\n  mutate(\n    streak_home_team = if_else(win_streak_home_team == 0, lose_streak_home_team * -1, win_streak_home_team),\n    streak_away_team = if_else(win_streak_away_team == 0, lose_streak_away_team * -1, win_streak_away_team)\n  ) |>\n  pivot_longer(\n    c(streak_home_team, streak_away_team),\n    names_to = \"streak_type\",\n    values_to = \"streak\"\n  ) |>\n  mutate(streak_type = snakecase::to_title_case(streak_type)) |>\n  ggplot(aes(streak, weekly_attendance, color = streak_type)) +\n  geom_point() +\n  geom_smooth() +\n  expand_limits(y = 0) +\n  scale_y_continuous(labels = scales::label_comma(), n.breaks = 10) +\n  labs(\n    color = NULL,\n    y = \"Attendance\",\n    x = \"Streak\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\nAgain, we only see mild effect on attendance, with perhaps a slightly higher affect for home team streaks. However, as with before we won't write this off completely since there are so many within-group interactions happening which are difficult to visualize.\n\n## Up Next\n\nI've selected just a few different ways to visualize these data but there are undoubtedly countless more ways. I would love to hear more ideas from you about how to visualize the data!\n\nIn part 2 of this analysis I will dive into some modeling techniques so we can assess once and for all if these variables do in fact contribute to game attendance. As we learned throughout this post, there are some prominent within-group effects at play and we will be sure to address those in the model development process. Stay tuned!\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}